install.packages('RMongo')
install.packages('rmongodb')
library(rmongodb)
help("mongo.create")
db <- mongo.create(host = "10.0.1.10", name='test')
db <- mongo.create(host = "10.0.1.10")
db
mongo.is.connected(db)
mongo.get.databases(db)
mongo.get.database.collection(db, test)
mongo.get.database.collections(db, test)
mongo.get.database.collections(db, 'test')
coll <- 'test.test'
mongo.count(db, coll)
mongo.find.one(db, coll)
mongo.find.all(db, coll)
res <- mongo.distinct(db, coll, 'tweetdate')
head(res, 10)
query <- mongo.bson.from.list(list('checkedin' = 'YES'))
query
buf <- mongo.bson.buffer.create()
regex <- mongo.regex.create('Sat\sJan\s\d\d', options='i')
regex <- mongo.regex.create('Sat Jan \d\d', options='i')
regex <- mongo.regex.create('Apr.', options='i')
mongo.bson.buffer.append.regex(buf, coll, regex)
b <- mongo.bson.from.buffer(buf)
b
setwd("C:/Users/jasonlewris/Desktop/MyLife/SchoolWork/UVA/Spring/DataViz/election_map/Data/CombinedData")
election <- read.csv("2012_full_election_county2.csv", header=T)
income <- read.csv("COMBINED_2012.csv", header=T)
colnames(election)
colnames(income)
combined <- merge(election, income, by='county_id')
dim(combined)
head(combined)
write.csv(combined, file='SUPERCOMBINED.csv', row.names = FALSE)
is.na(combined$percent_obama)
combined$total <- ifelse(combined$percent_obama > 50, 1, 0)
combined$percent_obama <- as.numeric(combined$percent_obama)
combined$total <- ifelse(combined$percent_obama > 50, 1, 0)
table(combined$total)
mean(which(combined$total == 1))
aggregate(total, data=combined, mean)
aggregate(combined$total, data=combined, mean)
sub2 <- which(combined$total == 1)
sub2
sub2 <- combined[which(combined$total == 1),]
sub2
mean(sub2$median_income)
sub2 <- combined[which(combined$total == 0),]
mean(sub2$median_income)
